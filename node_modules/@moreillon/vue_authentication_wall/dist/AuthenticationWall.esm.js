import axios from 'axios';
import VueCookie from 'vue-cookie';
import Loader from '@moreillon/vue_loader';

//

var script = {
  name: 'LoginForm',
  props: {
    options: Object,
  },
  //mixins: [StoreMixin],
  components: {
    Loader: Loader
  },
  data: function data(){
    return {
      username: '',
      password: '',
      processing: false,
    }
  },
  methods: {
    login: function login(){
      var this$1 = this;

      // Send credentials and get JWT

      var url = this.options.login_url;
      var body = { username: this.username, password: this.password };

      this.snack = null;
      this.processing = true;

      axios.post(url, body)
      .then( function (ref) {
        var data = ref.data;


        var jwt = data.jwt;

        if(!jwt) { return }

        var cookie_options = {
          secure: location.protocol === 'https:',
          samesite: 'Strict',
          expires: '1M',
        };

        VueCookie.set('jwt',jwt, cookie_options);

        // clear the inputs
        this$1.username = '';
        this$1.password = '';

        this$1.$emit('loggedIn');
      })
      .catch( function (error) {
        if(error.response) {
          console.error(error.response.data);
          alert(error.response.data);
        }
        else {
          alert("Error while logging in");
          console.error(error);
        }
       })
      .finally(function () { this$1.processing = false; });

    },

  },

};

function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {
    if (typeof shadowMode !== 'boolean') {
        createInjectorSSR = createInjector;
        createInjector = shadowMode;
        shadowMode = false;
    }
    // Vue.extend constructor export interop.
    var options = typeof script === 'function' ? script.options : script;
    // render functions
    if (template && template.render) {
        options.render = template.render;
        options.staticRenderFns = template.staticRenderFns;
        options._compiled = true;
        // functional template
        if (isFunctionalTemplate) {
            options.functional = true;
        }
    }
    // scopedId
    if (scopeId) {
        options._scopeId = scopeId;
    }
    var hook;
    if (moduleIdentifier) {
        // server build
        hook = function (context) {
            // 2.3 injection
            context =
                context || // cached call
                    (this.$vnode && this.$vnode.ssrContext) || // stateful
                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional
            // 2.2 with runInNewContext: true
            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                context = __VUE_SSR_CONTEXT__;
            }
            // inject component styles
            if (style) {
                style.call(this, createInjectorSSR(context));
            }
            // register component module identifier for async chunk inference
            if (context && context._registeredComponents) {
                context._registeredComponents.add(moduleIdentifier);
            }
        };
        // used by ssr in case component is cached and beforeCreate
        // never gets called
        options._ssrRegister = hook;
    }
    else if (style) {
        hook = shadowMode
            ? function (context) {
                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));
            }
            : function (context) {
                style.call(this, createInjector(context));
            };
    }
    if (hook) {
        if (options.functional) {
            // register for functional component in vue file
            var originalRender = options.render;
            options.render = function renderWithStyleInjection(h, context) {
                hook.call(context);
                return originalRender(h, context);
            };
        }
        else {
            // inject component registration as beforeCreate hook
            var existing = options.beforeCreate;
            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];
        }
    }
    return script;
}

var isOldIE = typeof navigator !== 'undefined' &&
    /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase());
function createInjector(context) {
    return function (id, style) { return addStyle(id, style); };
}
var HEAD;
var styles = {};
function addStyle(id, css) {
    var group = isOldIE ? css.media || 'default' : id;
    var style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });
    if (!style.ids.has(id)) {
        style.ids.add(id);
        var code = css.source;
        if (css.map) {
            // https://developer.chrome.com/devtools/docs/javascript-debugging
            // this makes source maps inside style tags work properly in Chrome
            code += '\n/*# sourceURL=' + css.map.sources[0] + ' */';
            // http://stackoverflow.com/a/26603875
            code +=
                '\n/*# sourceMappingURL=data:application/json;base64,' +
                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +
                    ' */';
        }
        if (!style.element) {
            style.element = document.createElement('style');
            style.element.type = 'text/css';
            if (css.media)
                { style.element.setAttribute('media', css.media); }
            if (HEAD === undefined) {
                HEAD = document.head || document.getElementsByTagName('head')[0];
            }
            HEAD.appendChild(style.element);
        }
        if ('styleSheet' in style.element) {
            style.styles.push(code);
            style.element.styleSheet.cssText = style.styles
                .filter(Boolean)
                .join('\n');
        }
        else {
            var index = style.ids.size - 1;
            var textNode = document.createTextNode(code);
            var nodes = style.element.childNodes;
            if (nodes[index])
                { style.element.removeChild(nodes[index]); }
            if (nodes.length)
                { style.element.insertBefore(textNode, nodes[index]); }
            else
                { style.element.appendChild(textNode); }
        }
    }
}

/* script */
var __vue_script__ = script;

/* template */
var __vue_render__ = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "form",
    {
      staticClass: "login_form",
      on: {
        submit: function($event) {
          $event.preventDefault();
          return _vm.login()
        }
      }
    },
    [
      _c("div", [_vm._v(_vm._s(_vm.options.hint))]),
      _vm._v(" "),
      _c("input", {
        directives: [
          {
            name: "model",
            rawName: "v-model",
            value: _vm.username,
            expression: "username"
          }
        ],
        attrs: { id: "username", type: "text", placeholder: "Username" },
        domProps: { value: _vm.username },
        on: {
          input: function($event) {
            if ($event.target.composing) {
              return
            }
            _vm.username = $event.target.value;
          }
        }
      }),
      _vm._v(" "),
      _c("input", {
        directives: [
          {
            name: "model",
            rawName: "v-model",
            value: _vm.password,
            expression: "password"
          }
        ],
        attrs: { id: "password", type: "password", placeholder: "Password" },
        domProps: { value: _vm.password },
        on: {
          input: function($event) {
            if ($event.target.composing) {
              return
            }
            _vm.password = $event.target.value;
          }
        }
      }),
      _vm._v(" "),
      _c("input", { attrs: { type: "submit", value: "Login" } }),
      _vm._v(" "),
      _c(
        "button",
        {
          attrs: { type: "button", disabled: _vm.processing },
          on: {
            click: function($event) {
              return _vm.login()
            }
          }
        },
        [
          !_vm.processing ? _c("span", [_vm._v("Login")]) : _vm._e(),
          _vm._v(" "),
          _vm.processing ? _c("Loader") : _vm._e()
        ],
        1
      )
    ]
  )
};
var __vue_staticRenderFns__ = [];
__vue_render__._withStripped = true;

  /* style */
  var __vue_inject_styles__ = function (inject) {
    if (!inject) { return }
    inject("data-v-512d5ab6_0", { source: "\ninput[type=\"submit\"][data-v-512d5ab6] {\n  display: none;\n}\ninput[data-v-512d5ab6] {\n  padding: 0.25em;\n  border: none;\n  border-bottom: 1px solid #444444;\n  transition: 0.25s;\n}\ninput[data-v-512d5ab6]:focus {\n  border-color: #c00000;\n  outline: none;\n}\ninput[data-v-512d5ab6], button[data-v-512d5ab6]{\n  margin-top: 2em;\n}\nform[data-v-512d5ab6] {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\nlabel[data-v-512d5ab6] {\n  width: 80px;\n}\nbutton[data-v-512d5ab6] {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 2em;\n  width: 80px;\n  border: 1px solid #444444;\n  background-color: transparent;\n  cursor: pointer;\n  transition: 0.25s;\n}\nbutton[data-v-512d5ab6]:disabled {\n  border-color: #bbbbbb;\n  color: #bbbbbb;\n}\nbutton[data-v-512d5ab6]:not(:disabled):hover {\n  color: #c00000;\n  border-color: #c00000;\n}\n\n", map: {"version":3,"sources":["/builds/moreillon_ci/moreillon_npm/vue_authentication_wall/src/components/LoginForm.vue"],"names":[],"mappings":";AA+GA;EACA,aAAA;AACA;AAEA;EACA,eAAA;EACA,YAAA;EACA,gCAAA;EACA,iBAAA;AACA;AAEA;EACA,qBAAA;EACA,aAAA;AACA;AAEA;EACA,eAAA;AACA;AAEA;EACA,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;AACA;AAEA;EACA,WAAA;AACA;AAEA;EACA,aAAA;EACA,mBAAA;EACA,uBAAA;EACA,WAAA;EACA,WAAA;EACA,yBAAA;EACA,6BAAA;EACA,eAAA;EACA,iBAAA;AACA;AAEA;EACA,qBAAA;EACA,cAAA;AACA;AAEA;EACA,cAAA;EACA,qBAAA;AACA","file":"LoginForm.vue","sourcesContent":["<template>\n  <form\n    class=\"login_form\"\n    @submit.prevent=\"login()\">\n\n\n    <div>{{options.hint}}</div>\n\n    <input\n      id=\"username\"\n      type=\"text\"\n      v-model=\"username\"\n      placeholder=\"Username\">\n\n    <input\n      id=\"password\"\n      type=\"password\"\n      v-model=\"password\"\n      placeholder=\"Password\">\n\n    <input type=\"submit\" value=\"Login\">\n\n    <button\n      type=\"button\"\n      @click=\"login()\"\n      :disabled=\"processing\">\n      <span v-if=\"!processing\">Login</span>\n      <Loader v-if=\"processing\" />\n\n    </button>\n\n  </form>\n</template>\n\n<script>\n/*\nThis component exchanges credentials for a JWT and manages the storage of the JWT in cookies\n*/\n\nimport axios from 'axios'\nimport VueCookie from 'vue-cookie'\nimport Loader from '@moreillon/vue_loader'\n\nexport default {\n  name: 'LoginForm',\n  props: {\n    options: Object,\n  },\n  //mixins: [StoreMixin],\n  components: {\n    Loader\n  },\n  data(){\n    return {\n      username: '',\n      password: '',\n      processing: false,\n    }\n  },\n  methods: {\n    login(){\n      // Send credentials and get JWT\n\n      const url = this.options.login_url\n      const body = { username: this.username, password: this.password }\n\n      this.snack = null\n      this.processing = true\n\n      axios.post(url, body)\n      .then( ({data}) => {\n\n        const {jwt} = data\n\n        if(!jwt) return\n\n        const cookie_options = {\n          secure: location.protocol === 'https:',\n          samesite: 'Strict',\n          expires: '1M',\n        }\n\n        VueCookie.set('jwt',jwt, cookie_options)\n\n        // clear the inputs\n        this.username = ''\n        this.password = ''\n\n        this.$emit('loggedIn')\n      })\n      .catch( (error) => {\n        if(error.response) {\n          console.error(error.response.data)\n          alert(error.response.data)\n        }\n        else {\n          alert(`Error while logging in`)\n          console.error(error)\n        }\n       })\n      .finally(() => { this.processing = false })\n\n    },\n\n  },\n\n}\n</script>\n\n<style scoped>\n\ninput[type=\"submit\"] {\n  display: none;\n}\n\ninput {\n  padding: 0.25em;\n  border: none;\n  border-bottom: 1px solid #444444;\n  transition: 0.25s;\n}\n\ninput:focus {\n  border-color: #c00000;\n  outline: none;\n}\n\ninput, button{\n  margin-top: 2em;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\nlabel {\n  width: 80px;\n}\n\nbutton {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 2em;\n  width: 80px;\n  border: 1px solid #444444;\n  background-color: transparent;\n  cursor: pointer;\n  transition: 0.25s;\n}\n\nbutton:disabled {\n  border-color: #bbbbbb;\n  color: #bbbbbb;\n}\n\nbutton:not(:disabled):hover {\n  color: #c00000;\n  border-color: #c00000;\n}\n\n</style>\n"]}, media: undefined });

  };
  /* scoped */
  var __vue_scope_id__ = "data-v-512d5ab6";
  /* module identifier */
  var __vue_module_identifier__ = undefined;
  /* functional template */
  var __vue_is_functional_template__ = false;
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  var __vue_component__ = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },
    __vue_inject_styles__,
    __vue_script__,
    __vue_scope_id__,
    __vue_is_functional_template__,
    __vue_module_identifier__,
    false,
    createInjector,
    undefined,
    undefined
  );

//


var script$1 = {
  name: 'Home',
  components: {
    LoginForm: __vue_component__,
    Loader: Loader,
  },
  props: {
    options: Object,
  },
  data: function data(){
    return {
      loading: false,
      user: null,
    }
  },
  mounted: function mounted(){
    this.get_current_user();
  },
  methods:{

    get_current_user: function get_current_user(){
      var this$1 = this;



      var jwt = VueCookie.get('jwt');

      this.set_authorization_header(jwt); // Does not feel like the right place to do this

      if(!jwt) { return }

      this.loading = true;

      var url = this.options.identification_url;

      var headers = { Authorization: ("Bearer " + jwt) };

      axios.get(url, {headers: headers})
      .then( function (ref) {
      var data = ref.data;
 this$1.user = data; })
      .catch( function (error) {
        console.error(error);
        VueCookie.delete('jwt');
        if(this$1.axios) { delete this$1.axios.defaults.headers.common['Authorization']; }
       })
       .finally( function () {
         this$1.loading = false;
         this$1.$emit('user', this$1.user);
       });

    },
    set_authorization_header: function set_authorization_header(jwt) {

      if(!this.axios) { return }

      // either set or unset the header depending on of jwt being in cookies
      if(jwt) { this.axios.defaults.headers.common['Authorization'] = "Bearer " + jwt; }
      else { delete this.axios.defaults.headers.common['Authorization']; }

    },
  }
};

/* script */
var __vue_script__$1 = script$1;

/* template */
var __vue_render__$1 = function() {
  var _vm = this;
  var _h = _vm.$createElement;
  var _c = _vm._self._c || _h;
  return _c(
    "div",
    { staticClass: "wall_wrapper" },
    [
      _c("transition", { attrs: { name: "fade" } }, [
        !_vm.user
          ? _c(
              "div",
              { staticClass: "wall" },
              [
                _vm.options.header_logo !== false
                  ? _c("img", {
                      staticClass: "application_logo",
                      class: { rotating_logo: !_vm.options.header_logo },
                      attrs: {
                        src:
                          _vm.options.header_logo ||
                          "https://cdn.maximemoreillon.com/logo/thick/logo.png",
                        alt: _vm.options.title + "_logo"
                      }
                    })
                  : _vm._e(),
                _vm._v(" "),
                _c("h2", [_vm._v(_vm._s(_vm.options.title))]),
                _vm._v(" "),
                !_vm.loading
                  ? _c("LoginForm", {
                      attrs: { options: _vm.options },
                      on: {
                        loggedIn: function($event) {
                          return _vm.get_current_user()
                        }
                      }
                    })
                  : _vm._e(),
                _vm._v(" "),
                _vm.loading ? _c("Loader") : _vm._e()
              ],
              1
            )
          : _vm._e()
      ]),
      _vm._v(" "),
      !!_vm.user && !_vm.loading ? _vm._t("default") : _vm._e()
    ],
    2
  )
};
var __vue_staticRenderFns__$1 = [];
__vue_render__$1._withStripped = true;

  /* style */
  var __vue_inject_styles__$1 = function (inject) {
    if (!inject) { return }
    inject("data-v-1fe3e3ce_0", { source: "\n.wall[data-v-1fe3e3ce] {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  background-color: white;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  padding-top: 25vh;\r\n\r\n  font-family: sans-serif;\n}\n.application_logo[data-v-1fe3e3ce] {\r\n  width: 20vmin;\r\n  width: 20vmin;\r\n  object-fit: contain;\n}\n.rotating_logo[data-v-1fe3e3ce] {\r\n  animation-name: rotating_logo-data-v-1fe3e3ce;\r\n  animation-duration: 60s;\r\n  animation-timing-function: linear;\r\n  animation-iteration-count: infinite;\n}\n@keyframes rotating_logo-data-v-1fe3e3ce {\nfrom {\r\n    transform: rotate(0deg);\n}\nto {\r\n    transform: rotate(360deg);\n}\n}\n.loader[data-v-1fe3e3ce] {\r\n  font-size: 200%;\n}\n.fade-enter-active[data-v-1fe3e3ce], .fade-leave-active[data-v-1fe3e3ce] {\r\n  transition: opacity .5s;\n}\n.fade-enter[data-v-1fe3e3ce], .fade-leave-to[data-v-1fe3e3ce] {\r\n  opacity: 0;\n}\r\n", map: {"version":3,"sources":["/builds/moreillon_ci/moreillon_npm/vue_authentication_wall/src/AuthenticationWall.vue"],"names":[],"mappings":";AAwGA;EACA,eAAA;EACA,MAAA;EACA,OAAA;EACA,QAAA;EACA,SAAA;EACA,aAAA;EACA,uBAAA;;EAEA,aAAA;EACA,sBAAA;EACA,mBAAA;EACA,2BAAA;;EAEA,iBAAA;;EAEA,uBAAA;AACA;AAEA;EACA,aAAA;EACA,aAAA;EACA,mBAAA;AACA;AAEA;EACA,6CAAA;EACA,uBAAA;EACA,iCAAA;EACA,mCAAA;AACA;AAEA;AACA;IACA,uBAAA;AACA;AAEA;IACA,yBAAA;AACA;AACA;AAEA;EACA,eAAA;AACA;AAEA;EACA,uBAAA;AACA;AACA;EACA,UAAA;AACA","file":"AuthenticationWall.vue","sourcesContent":["<template>\r\n  <div class=\"wall_wrapper\">\r\n\r\n    <transition name=\"fade\">\r\n\r\n\r\n      <div class=\"wall\" v-if=\"!user\">\r\n\r\n        <img \r\n          v-if=\"options.header_logo !== false\"\r\n          class=\"application_logo\" \r\n          :class=\"{'rotating_logo': !options.header_logo}\"\r\n          :src=\"options.header_logo || 'https://cdn.maximemoreillon.com/logo/thick/logo.png'\"\r\n          :alt=\"`${options.title}_logo`\"\r\n          >\r\n        <h2>{{options.title}}</h2>\r\n\r\n        <LoginForm\r\n          v-if=\"!loading\"\r\n          :options=\"options\"\r\n          @loggedIn=\"get_current_user()\"/>\r\n\r\n\r\n        <Loader v-if=\"loading\"/>\r\n      </div>\r\n\r\n\r\n    </transition>\r\n\r\n    <slot v-if=\"!!user && !loading\"/>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// @ is an alias to /src\r\nimport LoginForm from './components/LoginForm.vue'\r\nimport axios from 'axios'\r\nimport VueCookie from 'vue-cookie'\r\nimport Loader from '@moreillon/vue_loader'\r\n\r\n\r\nexport default {\r\n  name: 'Home',\r\n  components: {\r\n    LoginForm,\r\n    Loader,\r\n  },\r\n  props: {\r\n    options: Object,\r\n  },\r\n  data(){\r\n    return {\r\n      loading: false,\r\n      user: null,\r\n    }\r\n  },\r\n  mounted(){\r\n    this.get_current_user()\r\n  },\r\n  methods:{\r\n\r\n    get_current_user(){\r\n\r\n\r\n      const jwt = VueCookie.get('jwt')\r\n\r\n      this.set_authorization_header(jwt) // Does not feel like the right place to do this\r\n\r\n      if(!jwt) return\r\n\r\n      this.loading = true\r\n\r\n      const url = this.options.identification_url\r\n\r\n      const headers = { Authorization: `Bearer ${jwt}` }\r\n\r\n      axios.get(url, {headers})\r\n      .then( ({data}) => { this.user = data })\r\n      .catch( (error) => {\r\n        console.error(error)\r\n        VueCookie.delete('jwt')\r\n        if(this.axios) delete this.axios.defaults.headers.common['Authorization']\r\n       })\r\n       .finally( () => {\r\n         this.loading = false\r\n         this.$emit('user', this.user)\r\n       })\r\n\r\n    },\r\n    set_authorization_header(jwt) {\r\n\r\n      if(!this.axios) return\r\n\r\n      // either set or unset the header depending on of jwt being in cookies\r\n      if(jwt) this.axios.defaults.headers.common['Authorization'] = `Bearer ${jwt}`\r\n      else delete this.axios.defaults.headers.common['Authorization']\r\n\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.wall {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  z-index: 1000;\r\n  background-color: white;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n\r\n  padding-top: 25vh;\r\n\r\n  font-family: sans-serif;\r\n}\r\n\r\n.application_logo {\r\n  width: 20vmin;\r\n  width: 20vmin;\r\n  object-fit: contain;\r\n}\r\n\r\n.rotating_logo {\r\n  animation-name: rotating_logo;\r\n  animation-duration: 60s;\r\n  animation-timing-function: linear;\r\n  animation-iteration-count: infinite;\r\n}\r\n\r\n@keyframes rotating_logo {\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n\r\n.loader {\r\n  font-size: 200%;\r\n}\r\n\r\n.fade-enter-active, .fade-leave-active {\r\n  transition: opacity .5s;\r\n}\r\n.fade-enter, .fade-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>\r\n"]}, media: undefined });

  };
  /* scoped */
  var __vue_scope_id__$1 = "data-v-1fe3e3ce";
  /* module identifier */
  var __vue_module_identifier__$1 = undefined;
  /* functional template */
  var __vue_is_functional_template__$1 = false;
  /* style inject SSR */
  
  /* style inject shadow dom */
  

  
  var __vue_component__$1 = /*#__PURE__*/normalizeComponent(
    { render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 },
    __vue_inject_styles__$1,
    __vue_script__$1,
    __vue_scope_id__$1,
    __vue_is_functional_template__$1,
    __vue_module_identifier__$1,
    false,
    createInjector,
    undefined,
    undefined
  );

// Import vue component

// Declare install function executed by Vue.use()
function install(Vue) {
	if (install.installed) { return; }
	install.installed = true;
	Vue.component('AuthenticationWall', __vue_component__$1);
}

// Create module definition for Vue.use()
var plugin = {
	install: install,
};

// Auto-install when vue is found (eg. in browser via <script> tag)
var GlobalVue = null;
if (typeof window !== 'undefined') {
	GlobalVue = window.Vue;
} else if (typeof global !== 'undefined') {
	GlobalVue = global.Vue;
}
if (GlobalVue) {
	GlobalVue.use(plugin);
}

export default __vue_component__$1;
export { install };
