version: '3'
services:
  mysqldb:
    env_file: .env
    image: mysql:8.0
    container_name: mysqlcontainer
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    volumes:
      - ./data:/var/lib/mysql
      - ./dbinit:/docker-entrypoint-initdb.d
      - ./attach:/usr/lumina/attach
    ports:
      - "${DB_PORT}:3306"
    expose:
      - "${DB_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      SERVICE_TAGS: prod
      SERVICE_NAME: mysqldb
    networks:
      internalnet: 
        ipv4_address: ${MYSQLDB_IP}

  nodeapp:
    container_name: nodeappcontainer
    build: .
    image: nodeapp:v1
    environment:
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      DB_CONNECTION_LIMIT: ${DB_CONNECTION_LIMIT}
      SERVER_PORT: ${SERVER_PORT}
      SERVICE_TAGS: prod
      SERVICE_NAME: nodeappservice
      VUE_APP_USER_MANAGER_API_URL: ${VUE_APP_USER_MANAGER_API_URL}
    ports:
      - "${SERVER_PORT}:3000"
    expose:
      - "${SERVER_PORT}"
    depends_on:
      - mysqldb
      - user-manager-api
    networks:
      internalnet: 
        ipv4_address: ${NODEAPP_CONTAINER_IP}
      extern:

  mongo:
    image: mongo
    logging:
      driver: none
    networks:
      internalnet: 
        ipv4_address: ${MONGO_IP}

  user-manager-api:
    image: moreillon/user-manager-mongoose
    environment:
      MONGODB_URL: ${MONGODB_URL}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "7071:80"
    depends_on:
      - mongo
    networks:
      internalnet: 
        ipv4_address: ${USER_MANAGER_API_IP}

  user-manager-front:
    image: moreillon/user-manager-mongoose-front
    logging:
      driver: none
    environment:
      VUE_APP_USER_MANAGER_API_URL: ${VUE_APP_USER_MANAGER_API_URL}
    networks:
      internalnet: 
        ipv4_address: ${USER_MANAGER_FRONT_IP}

networks:
  extern:
    external: true
  internalnet:
    driver: bridge
    ipam:
      driver: default
      config: 
        - subnet: ${NETWORKS_SUBNET_IP}
          gateway: ${NETWORKS_GATEWAY_IP}
